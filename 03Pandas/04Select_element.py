# -*- coding: utf-8 -*-
import pandas as pd

'''
데이터프레임에서 특정 원소 하나를 선택할 때는 Java의 배열과 유사하게
행과 열의 인덱스를 통해 접근할 수 있다.
'''
exam_data = {'이름' : ['유비','관우','장비'],
             '국어' : [90, 80, 70],
             '영어' : [98, 89, 95],
             '수학' : [85, 95, 100],
             '체육' : [100, 90, 90]}
df = pd.DataFrame(exam_data)
'''
최초로 생성한 데이터프레임은 인덱스를 별도로 지정하지 않았으므로로  숫자형 인덱스가 자동으로 부여된다.
'''
print(f"{'생성 후 df전체출력':-^30}")
print(df)

'''
현재는 숫자형 인덱스만 부여된 상태이므로 '유비'를 통해서는 데이터에 접근할 수 없다.
'''
#a = df.loc['유비', '수학'] #오류발생
a = df.loc[0, '수학']#정상적으로 접근됨
print(f"{'0, 수학':-^30}")
print(a)

'''
이름 컬럼을 데이터프레임의 행 인덱스로 지정한다.
이 경우 출력시 숫자형 인덱스는 제거된다.'''
df.set_index('이름', inplace=True)
print(f"{'index설정 후 출력':-^30}")
#'이름'컬럼은 데이터에서는 제거되고 인덱스로 전환된다.
print(df)

#행과 열을 통해 특정 요소 1개를 선택한 후 출력할 수 있다.
print(f"{'유비, 수학 출력':-^30}")
a = df.loc['유비', '수학']
print(a)
print(f"{'0,2 출력':-^30}") #문자형 인덱스를 지정하더라도 숫자형 인덱스로 접근할 수 있다.
b = df.iloc[0,2]
print(b)

#2개 이상의 요소를 선택할 때는 컴마를 사용
print(f"{'유비의 영어와 체육 출력':-^30}")
c = df.loc['유비', ['영어', '체육']]
print(c)
d = df.iloc[0, [1,3]]
print(d)

#콜론을 통해 범위를 지정하여 2개 이상의 요소를 선택
print(f"{'유비의 영어~체육 까지 출력':-^30}")
e = df.loc['유비', '영어':'체육']
print(e)
#1번 인덱스부터 마지막까지 선택하여 출력
f = df.iloc[0, 1:]
print(f)

#2개 이상의 행과 열을 선택하여 요소 지정
print(f"{'개별 선택 출력':-^30}")
g = df.loc[['유비', '관우'], ['영어', '체육']]
print(g)
h = df.iloc[[0,1], [1,3]]
print(h)

#콜론을 통해 범위를 지정하여 2개 이상의 요소를 선택
print(f"{'범위 지정 출력':-^30}")
i = df.loc['유비':'관우', '영어':'체육']
print(i)
j = df.iloc[0:2, 1:] #행은 0~1까지만 선택하고, 열은 1~마지막까지 선택한다.
print(j)