# -*- coding: utf-8 -*-
import pandas as pd

exam_data = {'이름' : ['서준','우현','인아'],
             '국어' : [90, 80, 70],
             '영어' : [98, 89, 95],
             '음악' : [85, 95, 100],
             '체육' : [100, 90, 90]}
df = pd.DataFrame(exam_data)

#숫자형 행 인덱스로 자동 지정되어 출력
print(f"{'최초 출력':-^30}")
print(df)

#인덱스를 '이름'컬럼으로 변경한 후 원본에 저장
print(f"{'이름을 index로 지정 후 출력':-^30}")
df.set_index('이름',inplace=True)
print(df)


print(f"{'0,3 요소 수정 후':-^30}")
#0행 전체를 선택한 다음 하나의 요소를 지정하게 되므로 퍼포먼스 안 좋음. 따라서 경고 발생
# df.iloc[0][3] = 77 #경고 발생
df.iloc[0,3] = 77 #이와 같이 사용. 컴마를 통해 하나의 요소를 직접 지정하기
print(df)

# 문자형 인덱스로 접근 후 요소 수정
print(f"{'서준, 체육 요소 수정 후':-^30}")
# df.loc['서준']['체육']= 66 #경고 발생
df.loc['서준','체육'] = 66
print(df)

#2개 이상의 요소를 동일한 값으로 수정
print(f"{'우현 수정 후':-^30}")
df.loc['우현',['영어','체육']] = 55
print(df)
#여러 요소를 다른 값으로 수정
print(f"{'인아 수정 후':-^30}")
df.loc['인아',['국어','음악']] = 44, 33
print(df)

#'체육'컬럼은 데이터에서 삭제된 후 인덱스로 이동되어 지정됨
print(f"{'체육을 index로 수정':-^30}")
new_df1 = df.set_index('체육')
'''
기존에 지정된 인덱스를 '체육' 컬럼으로 대체한다. 즉, '이름'으로 지정되었던 인덱스는 삭제된다.
'''
print(new_df1)
print('66, 국어 =>', new_df1.loc[66, '국어'])

#2개의 컬럼을 인덱스로 지정
print(f"{'음악과 영어를 index로 수정':-^30}")
new_df2 = new_df1.set_index(['음악', '영어'])
#컬럼에서는 국어만 남게됨
print(new_df2)
#인덱스가 2개이므로 요소를 지정할 때도 아래와 같이 작성해야한다.
print('(85,98), 국어 =>', new_df2.loc[(85,98), '국어'])
print('(33,95), 국어 =>', new_df2.loc[(33,95), '국어'])