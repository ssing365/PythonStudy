'''
format()사용하기
    :문자열 포매팅은 서식문자보다 더 간단히 문자열을 표현할 수 있다.
    {}안에 포매팅을 지정하고 format()메서드로 값을 삽입한다.
    형식]
        '{인덱스}'.format(값 혹은 변수)
'''

str1 = "name : {0}".format('홍길동')
print(str1)
#출력 : name : 홍길동

age = 55
str2 = 'age : {0}'.format(age)
print(str2)
#출력 : age : 55

str3 = 'name : {name}, age : {age}'.format(name = '홍길동', age =33)
print(str3)
#출력 : name : 홍길동, age : 33

str4 = '이름 : {}, 나이 : {}'.format('이순신',44)
print(str4)
#출력 : 이름 : 이순신, 나이 : 44

str5 = '나이 : {1}, 이름 : {0}'.format('이성계', 55)
print(str5)
#출력 : 나이 : 55, 이름 : 이성계


str6 = '항목1 : {0}, 항목2 : {1}, 항목3 : {0}'.format('서울', '부산')
print(str6)
#출력 : 항목1 : 서울, 항목2 : 부산, 항목3 : 서울
#인덱스를 중복해서 사용할 수 있다.


str7 = '정수3자리 : {0:03d}, {1:03d}'.format(12345,12)
print(str7)
#출력 : 정수3자리 : 12345, 012
#정수 N자리로 표현 가능

str8 = '소수점 아래 2자리 : {0:0.2f}, 소수점 아래 5자리 : {1:0.5f}'.format(123.1234567,3.14)
print(str8)
#출력 : 소수점 아래 2자리 : 123.12, 소수점 아래 5자리 : 3.14000
#소수부 N자리 표현

str9 = '{{0}}'.format('Python 중괄호 표현')
print("str9=", str9)
#출력 : str9= {0}
#드물지만 {} 자체를 출력해야 할 때는 {{}}처럼 두 번 겹쳐서 사용한다.

str10 = 1592000
print(format(str10, ','))
#출력 : 1,592,000